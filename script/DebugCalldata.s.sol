// SPDX-License-Identifier: AGPL-3.0-only
pragma solidity ^0.8.28;

import {Script, console} from "forge-std/Script.sol";

contract DebugCalldata is Script {
    // These can be changed for different scenarios
    address constant TARGET_ADDRESS = 0xfe00E3574c59108343b9D7c265441528b68856e2; // the Metri safe address
    address constant CALLER_ADDRESS = 0x75cf11467937ce3F2f357CE24ffc3DBF8fD5c226; // the 4337 module address
    
    function setUp() public {}

    function run() public {
        // Fork Gnosis chain
        uint256 gnosisFork = vm.createSelectFork(vm.envString("GNOSIS_RPC"));
        
       // how to handle Metri calldata: replace 541d63c8 with 5229073f and call from 4337 module
        bytes memory calldata_ = hex"5229073f00000000000000000000000038869bf66a61cf6bdb996a6ae40d5853fd43b52600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000005648d80ff0a0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000050800c12c1e50abb450d6205ea2c3fa861b3b834d13e8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4f242432a000000000000000000000000fe00e3574c59108343b9d7c265441528b68856e20000000000000000000000009c39e706be3c72f8743eec767806f775f2282f790000000000000000000000009c39e706be3c72f8743eec767806f775f2282f79000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000bcd1babe67a115c86f5030ce1f2ba0e187d0ef5200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a2e6204500bcd1babe67a115c86f5030ce1f2ba0e187d0ef520000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000407da68f500c12c1e50abb450d6205ea2c3fa861b3b834d13e800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044e76cec53000000000000000000000000fdea8140093878bfca93aaa35d3d3087f4ab136d7e3cce5ea7516ef4e1f1de051fb31833a4c12bc09eb42b6b90513f0a0fc4c59a00c12c1e50abb450d6205ea2c3fa861b3b834d13e8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000249cd02313000000000000000000000000fe00e3574c59108343b9d7c265441528b68856e200bcd1babe67a115c86f5030ce1f2ba0e187d0ef520000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004439509351000000000000000000000000d44b8dcfbadfc78ea64c55b705bfc68199b56376000000000000000000000000000000000000000000000002b5e3af16b188000000d44b8dcfbadfc78ea64c55b705bfc68199b56376000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4de01e151000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000fe00e3574c59108343b9d7c265441528b68856e20000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000002b5e3af16b188000000ca8222e780d046707083f51377b5fd85e286601400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024baa3440f00000000000000000000000086533d1ada8ffbe7b6f7244f9a1b707f7f3e239b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
       
        console.log("Simulating call to:", TARGET_ADDRESS);
        console.log("From address:", CALLER_ADDRESS);
        console.log("Calldata:");
        console.logBytes(calldata_);

        // Simulate the call
        vm.prank(CALLER_ADDRESS);
        (bool success, bytes memory returnData) = TARGET_ADDRESS.call(calldata_);

        console.log("\nExecution result:");
        console.log("Success:", success);
        if (!success) {
            console.log("Revert data:");
            console.logBytes(returnData);
        }
    }
} 